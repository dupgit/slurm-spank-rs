/* automatically generated by rust-bindgen 0.61.0 */

pub const _ERRNO_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 35;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const _BITS_ERRNO_H: u32 = 1;
pub const EPERM: u32 = 1;
pub const ENOENT: u32 = 2;
pub const ESRCH: u32 = 3;
pub const EINTR: u32 = 4;
pub const EIO: u32 = 5;
pub const ENXIO: u32 = 6;
pub const E2BIG: u32 = 7;
pub const ENOEXEC: u32 = 8;
pub const EBADF: u32 = 9;
pub const ECHILD: u32 = 10;
pub const EAGAIN: u32 = 11;
pub const ENOMEM: u32 = 12;
pub const EACCES: u32 = 13;
pub const EFAULT: u32 = 14;
pub const ENOTBLK: u32 = 15;
pub const EBUSY: u32 = 16;
pub const EEXIST: u32 = 17;
pub const EXDEV: u32 = 18;
pub const ENODEV: u32 = 19;
pub const ENOTDIR: u32 = 20;
pub const EISDIR: u32 = 21;
pub const EINVAL: u32 = 22;
pub const ENFILE: u32 = 23;
pub const EMFILE: u32 = 24;
pub const ENOTTY: u32 = 25;
pub const ETXTBSY: u32 = 26;
pub const EFBIG: u32 = 27;
pub const ENOSPC: u32 = 28;
pub const ESPIPE: u32 = 29;
pub const EROFS: u32 = 30;
pub const EMLINK: u32 = 31;
pub const EPIPE: u32 = 32;
pub const EDOM: u32 = 33;
pub const ERANGE: u32 = 34;
pub const EDEADLK: u32 = 35;
pub const ENAMETOOLONG: u32 = 36;
pub const ENOLCK: u32 = 37;
pub const ENOSYS: u32 = 38;
pub const ENOTEMPTY: u32 = 39;
pub const ELOOP: u32 = 40;
pub const EWOULDBLOCK: u32 = 11;
pub const ENOMSG: u32 = 42;
pub const EIDRM: u32 = 43;
pub const ECHRNG: u32 = 44;
pub const EL2NSYNC: u32 = 45;
pub const EL3HLT: u32 = 46;
pub const EL3RST: u32 = 47;
pub const ELNRNG: u32 = 48;
pub const EUNATCH: u32 = 49;
pub const ENOCSI: u32 = 50;
pub const EL2HLT: u32 = 51;
pub const EBADE: u32 = 52;
pub const EBADR: u32 = 53;
pub const EXFULL: u32 = 54;
pub const ENOANO: u32 = 55;
pub const EBADRQC: u32 = 56;
pub const EBADSLT: u32 = 57;
pub const EDEADLOCK: u32 = 35;
pub const EBFONT: u32 = 59;
pub const ENOSTR: u32 = 60;
pub const ENODATA: u32 = 61;
pub const ETIME: u32 = 62;
pub const ENOSR: u32 = 63;
pub const ENONET: u32 = 64;
pub const ENOPKG: u32 = 65;
pub const EREMOTE: u32 = 66;
pub const ENOLINK: u32 = 67;
pub const EADV: u32 = 68;
pub const ESRMNT: u32 = 69;
pub const ECOMM: u32 = 70;
pub const EPROTO: u32 = 71;
pub const EMULTIHOP: u32 = 72;
pub const EDOTDOT: u32 = 73;
pub const EBADMSG: u32 = 74;
pub const EOVERFLOW: u32 = 75;
pub const ENOTUNIQ: u32 = 76;
pub const EBADFD: u32 = 77;
pub const EREMCHG: u32 = 78;
pub const ELIBACC: u32 = 79;
pub const ELIBBAD: u32 = 80;
pub const ELIBSCN: u32 = 81;
pub const ELIBMAX: u32 = 82;
pub const ELIBEXEC: u32 = 83;
pub const EILSEQ: u32 = 84;
pub const ERESTART: u32 = 85;
pub const ESTRPIPE: u32 = 86;
pub const EUSERS: u32 = 87;
pub const ENOTSOCK: u32 = 88;
pub const EDESTADDRREQ: u32 = 89;
pub const EMSGSIZE: u32 = 90;
pub const EPROTOTYPE: u32 = 91;
pub const ENOPROTOOPT: u32 = 92;
pub const EPROTONOSUPPORT: u32 = 93;
pub const ESOCKTNOSUPPORT: u32 = 94;
pub const EOPNOTSUPP: u32 = 95;
pub const EPFNOSUPPORT: u32 = 96;
pub const EAFNOSUPPORT: u32 = 97;
pub const EADDRINUSE: u32 = 98;
pub const EADDRNOTAVAIL: u32 = 99;
pub const ENETDOWN: u32 = 100;
pub const ENETUNREACH: u32 = 101;
pub const ENETRESET: u32 = 102;
pub const ECONNABORTED: u32 = 103;
pub const ECONNRESET: u32 = 104;
pub const ENOBUFS: u32 = 105;
pub const EISCONN: u32 = 106;
pub const ENOTCONN: u32 = 107;
pub const ESHUTDOWN: u32 = 108;
pub const ETOOMANYREFS: u32 = 109;
pub const ETIMEDOUT: u32 = 110;
pub const ECONNREFUSED: u32 = 111;
pub const EHOSTDOWN: u32 = 112;
pub const EHOSTUNREACH: u32 = 113;
pub const EALREADY: u32 = 114;
pub const EINPROGRESS: u32 = 115;
pub const ESTALE: u32 = 116;
pub const EUCLEAN: u32 = 117;
pub const ENOTNAM: u32 = 118;
pub const ENAVAIL: u32 = 119;
pub const EISNAM: u32 = 120;
pub const EREMOTEIO: u32 = 121;
pub const EDQUOT: u32 = 122;
pub const ENOMEDIUM: u32 = 123;
pub const EMEDIUMTYPE: u32 = 124;
pub const ECANCELED: u32 = 125;
pub const ENOKEY: u32 = 126;
pub const EKEYEXPIRED: u32 = 127;
pub const EKEYREVOKED: u32 = 128;
pub const EKEYREJECTED: u32 = 129;
pub const EOWNERDEAD: u32 = 130;
pub const ENOTRECOVERABLE: u32 = 131;
pub const ERFKILL: u32 = 132;
pub const EHWPOISON: u32 = 133;
pub const ENOTSUP: u32 = 95;
pub const SLURM_SUCCESS: u32 = 0;
pub const ESPANK_SUCCESS: u32 = 0;
pub const SLURM_ERROR: i32 = -1;
pub const SLURM_VERSION_NUMBER: u32 = 1378309;
pub const HAVE_S_CTX_SLURMD: u32 = 1;
pub const HAVE_S_CTX_JOB_SCRIPT: u32 = 1;
pub const SPANK_OPTION_MAXLEN: u32 = 75;
extern "C" {
    pub fn __errno_location() -> *mut ::std::os::raw::c_int;
}
pub const slurm_err_t_SLURM_UNEXPECTED_MSG_ERROR: slurm_err_t = 1000;
pub const slurm_err_t_SLURM_COMMUNICATIONS_CONNECTION_ERROR: slurm_err_t = 1001;
pub const slurm_err_t_SLURM_COMMUNICATIONS_SEND_ERROR: slurm_err_t = 1002;
pub const slurm_err_t_SLURM_COMMUNICATIONS_RECEIVE_ERROR: slurm_err_t = 1003;
pub const slurm_err_t_SLURM_COMMUNICATIONS_SHUTDOWN_ERROR: slurm_err_t = 1004;
pub const slurm_err_t_SLURM_PROTOCOL_VERSION_ERROR: slurm_err_t = 1005;
pub const slurm_err_t_SLURM_PROTOCOL_IO_STREAM_VERSION_ERROR: slurm_err_t = 1006;
pub const slurm_err_t_SLURM_PROTOCOL_AUTHENTICATION_ERROR: slurm_err_t = 1007;
pub const slurm_err_t_SLURM_PROTOCOL_INSANE_MSG_LENGTH: slurm_err_t = 1008;
pub const slurm_err_t_SLURM_MPI_PLUGIN_NAME_INVALID: slurm_err_t = 1009;
pub const slurm_err_t_SLURM_MPI_PLUGIN_PRELAUNCH_SETUP_FAILED: slurm_err_t = 1010;
pub const slurm_err_t_SLURM_PLUGIN_NAME_INVALID: slurm_err_t = 1011;
pub const slurm_err_t_SLURM_UNKNOWN_FORWARD_ADDR: slurm_err_t = 1012;
pub const slurm_err_t_SLURM_COMMUNICATIONS_MISSING_SOCKET_ERROR: slurm_err_t = 1013;
pub const slurm_err_t_SLURMCTLD_COMMUNICATIONS_CONNECTION_ERROR: slurm_err_t = 1800;
pub const slurm_err_t_SLURMCTLD_COMMUNICATIONS_SEND_ERROR: slurm_err_t = 1801;
pub const slurm_err_t_SLURMCTLD_COMMUNICATIONS_RECEIVE_ERROR: slurm_err_t = 1802;
pub const slurm_err_t_SLURMCTLD_COMMUNICATIONS_SHUTDOWN_ERROR: slurm_err_t = 1803;
pub const slurm_err_t_SLURM_NO_CHANGE_IN_DATA: slurm_err_t = 1900;
pub const slurm_err_t_ESLURM_INVALID_PARTITION_NAME: slurm_err_t = 2000;
pub const slurm_err_t_ESLURM_DEFAULT_PARTITION_NOT_SET: slurm_err_t = 2001;
pub const slurm_err_t_ESLURM_ACCESS_DENIED: slurm_err_t = 2002;
pub const slurm_err_t_ESLURM_JOB_MISSING_REQUIRED_PARTITION_GROUP: slurm_err_t = 2003;
pub const slurm_err_t_ESLURM_REQUESTED_NODES_NOT_IN_PARTITION: slurm_err_t = 2004;
pub const slurm_err_t_ESLURM_TOO_MANY_REQUESTED_CPUS: slurm_err_t = 2005;
pub const slurm_err_t_ESLURM_INVALID_NODE_COUNT: slurm_err_t = 2006;
pub const slurm_err_t_ESLURM_ERROR_ON_DESC_TO_RECORD_COPY: slurm_err_t = 2007;
pub const slurm_err_t_ESLURM_JOB_MISSING_SIZE_SPECIFICATION: slurm_err_t = 2008;
pub const slurm_err_t_ESLURM_JOB_SCRIPT_MISSING: slurm_err_t = 2009;
pub const slurm_err_t_ESLURM_USER_ID_MISSING: slurm_err_t = 2010;
pub const slurm_err_t_ESLURM_DUPLICATE_JOB_ID: slurm_err_t = 2011;
pub const slurm_err_t_ESLURM_PATHNAME_TOO_LONG: slurm_err_t = 2012;
pub const slurm_err_t_ESLURM_NOT_TOP_PRIORITY: slurm_err_t = 2013;
pub const slurm_err_t_ESLURM_REQUESTED_NODE_CONFIG_UNAVAILABLE: slurm_err_t = 2014;
pub const slurm_err_t_ESLURM_REQUESTED_PART_CONFIG_UNAVAILABLE: slurm_err_t = 2015;
pub const slurm_err_t_ESLURM_NODES_BUSY: slurm_err_t = 2016;
pub const slurm_err_t_ESLURM_INVALID_JOB_ID: slurm_err_t = 2017;
pub const slurm_err_t_ESLURM_INVALID_NODE_NAME: slurm_err_t = 2018;
pub const slurm_err_t_ESLURM_WRITING_TO_FILE: slurm_err_t = 2019;
pub const slurm_err_t_ESLURM_TRANSITION_STATE_NO_UPDATE: slurm_err_t = 2020;
pub const slurm_err_t_ESLURM_ALREADY_DONE: slurm_err_t = 2021;
pub const slurm_err_t_ESLURM_INTERCONNECT_FAILURE: slurm_err_t = 2022;
pub const slurm_err_t_ESLURM_BAD_DIST: slurm_err_t = 2023;
pub const slurm_err_t_ESLURM_JOB_PENDING: slurm_err_t = 2024;
pub const slurm_err_t_ESLURM_BAD_TASK_COUNT: slurm_err_t = 2025;
pub const slurm_err_t_ESLURM_INVALID_JOB_CREDENTIAL: slurm_err_t = 2026;
pub const slurm_err_t_ESLURM_IN_STANDBY_MODE: slurm_err_t = 2027;
pub const slurm_err_t_ESLURM_INVALID_NODE_STATE: slurm_err_t = 2028;
pub const slurm_err_t_ESLURM_INVALID_FEATURE: slurm_err_t = 2029;
pub const slurm_err_t_ESLURM_INVALID_AUTHTYPE_CHANGE: slurm_err_t = 2030;
pub const slurm_err_t_ESLURM_ACTIVE_FEATURE_NOT_SUBSET: slurm_err_t = 2031;
pub const slurm_err_t_ESLURM_INVALID_SCHEDTYPE_CHANGE: slurm_err_t = 2032;
pub const slurm_err_t_ESLURM_INVALID_SELECTTYPE_CHANGE: slurm_err_t = 2033;
pub const slurm_err_t_ESLURM_INVALID_SWITCHTYPE_CHANGE: slurm_err_t = 2034;
pub const slurm_err_t_ESLURM_FRAGMENTATION: slurm_err_t = 2035;
pub const slurm_err_t_ESLURM_NOT_SUPPORTED: slurm_err_t = 2036;
pub const slurm_err_t_ESLURM_DISABLED: slurm_err_t = 2037;
pub const slurm_err_t_ESLURM_DEPENDENCY: slurm_err_t = 2038;
pub const slurm_err_t_ESLURM_BATCH_ONLY: slurm_err_t = 2039;
pub const slurm_err_t_ESLURM_TASKDIST_ARBITRARY_UNSUPPORTED: slurm_err_t = 2040;
pub const slurm_err_t_ESLURM_TASKDIST_REQUIRES_OVERCOMMIT: slurm_err_t = 2041;
pub const slurm_err_t_ESLURM_JOB_HELD: slurm_err_t = 2042;
pub const slurm_err_t_ESLURM_INVALID_CRED_TYPE_CHANGE: slurm_err_t = 2043;
pub const slurm_err_t_ESLURM_INVALID_TASK_MEMORY: slurm_err_t = 2044;
pub const slurm_err_t_ESLURM_INVALID_ACCOUNT: slurm_err_t = 2045;
pub const slurm_err_t_ESLURM_INVALID_PARENT_ACCOUNT: slurm_err_t = 2046;
pub const slurm_err_t_ESLURM_SAME_PARENT_ACCOUNT: slurm_err_t = 2047;
pub const slurm_err_t_ESLURM_INVALID_LICENSES: slurm_err_t = 2048;
pub const slurm_err_t_ESLURM_NEED_RESTART: slurm_err_t = 2049;
pub const slurm_err_t_ESLURM_ACCOUNTING_POLICY: slurm_err_t = 2050;
pub const slurm_err_t_ESLURM_INVALID_TIME_LIMIT: slurm_err_t = 2051;
pub const slurm_err_t_ESLURM_RESERVATION_ACCESS: slurm_err_t = 2052;
pub const slurm_err_t_ESLURM_RESERVATION_INVALID: slurm_err_t = 2053;
pub const slurm_err_t_ESLURM_INVALID_TIME_VALUE: slurm_err_t = 2054;
pub const slurm_err_t_ESLURM_RESERVATION_BUSY: slurm_err_t = 2055;
pub const slurm_err_t_ESLURM_RESERVATION_NOT_USABLE: slurm_err_t = 2056;
pub const slurm_err_t_ESLURM_INVALID_WCKEY: slurm_err_t = 2057;
pub const slurm_err_t_ESLURM_RESERVATION_OVERLAP: slurm_err_t = 2058;
pub const slurm_err_t_ESLURM_PORTS_BUSY: slurm_err_t = 2059;
pub const slurm_err_t_ESLURM_PORTS_INVALID: slurm_err_t = 2060;
pub const slurm_err_t_ESLURM_PROLOG_RUNNING: slurm_err_t = 2061;
pub const slurm_err_t_ESLURM_NO_STEPS: slurm_err_t = 2062;
pub const slurm_err_t_ESLURM_INVALID_BLOCK_STATE: slurm_err_t = 2063;
pub const slurm_err_t_ESLURM_INVALID_BLOCK_LAYOUT: slurm_err_t = 2064;
pub const slurm_err_t_ESLURM_INVALID_BLOCK_NAME: slurm_err_t = 2065;
pub const slurm_err_t_ESLURM_INVALID_QOS: slurm_err_t = 2066;
pub const slurm_err_t_ESLURM_QOS_PREEMPTION_LOOP: slurm_err_t = 2067;
pub const slurm_err_t_ESLURM_NODE_NOT_AVAIL: slurm_err_t = 2068;
pub const slurm_err_t_ESLURM_INVALID_CPU_COUNT: slurm_err_t = 2069;
pub const slurm_err_t_ESLURM_PARTITION_NOT_AVAIL: slurm_err_t = 2070;
pub const slurm_err_t_ESLURM_CIRCULAR_DEPENDENCY: slurm_err_t = 2071;
pub const slurm_err_t_ESLURM_INVALID_GRES: slurm_err_t = 2072;
pub const slurm_err_t_ESLURM_JOB_NOT_PENDING: slurm_err_t = 2073;
pub const slurm_err_t_ESLURM_QOS_THRES: slurm_err_t = 2074;
pub const slurm_err_t_ESLURM_PARTITION_IN_USE: slurm_err_t = 2075;
pub const slurm_err_t_ESLURM_STEP_LIMIT: slurm_err_t = 2076;
pub const slurm_err_t_ESLURM_JOB_SUSPENDED: slurm_err_t = 2077;
pub const slurm_err_t_ESLURM_CAN_NOT_START_IMMEDIATELY: slurm_err_t = 2078;
pub const slurm_err_t_ESLURM_INTERCONNECT_BUSY: slurm_err_t = 2079;
pub const slurm_err_t_ESLURM_RESERVATION_EMPTY: slurm_err_t = 2080;
pub const slurm_err_t_ESLURM_INVALID_ARRAY: slurm_err_t = 2081;
pub const slurm_err_t_ESLURM_RESERVATION_NAME_DUP: slurm_err_t = 2082;
pub const slurm_err_t_ESLURM_JOB_STARTED: slurm_err_t = 2083;
pub const slurm_err_t_ESLURM_JOB_FINISHED: slurm_err_t = 2084;
pub const slurm_err_t_ESLURM_JOB_NOT_RUNNING: slurm_err_t = 2085;
pub const slurm_err_t_ESLURM_JOB_NOT_PENDING_NOR_RUNNING: slurm_err_t = 2086;
pub const slurm_err_t_ESLURM_JOB_NOT_SUSPENDED: slurm_err_t = 2087;
pub const slurm_err_t_ESLURM_JOB_NOT_FINISHED: slurm_err_t = 2088;
pub const slurm_err_t_ESLURM_TRIGGER_DUP: slurm_err_t = 2089;
pub const slurm_err_t_ESLURM_INTERNAL: slurm_err_t = 2090;
pub const slurm_err_t_ESLURM_INVALID_BURST_BUFFER_CHANGE: slurm_err_t = 2091;
pub const slurm_err_t_ESLURM_BURST_BUFFER_PERMISSION: slurm_err_t = 2092;
pub const slurm_err_t_ESLURM_BURST_BUFFER_LIMIT: slurm_err_t = 2093;
pub const slurm_err_t_ESLURM_INVALID_BURST_BUFFER_REQUEST: slurm_err_t = 2094;
pub const slurm_err_t_ESLURM_PRIO_RESET_FAIL: slurm_err_t = 2095;
pub const slurm_err_t_ESLURM_CANNOT_MODIFY_CRON_JOB: slurm_err_t = 2096;
pub const slurm_err_t_ESLURM_INVALID_MCS_LABEL: slurm_err_t = 2099;
pub const slurm_err_t_ESLURM_BURST_BUFFER_WAIT: slurm_err_t = 2100;
pub const slurm_err_t_ESLURM_PARTITION_DOWN: slurm_err_t = 2101;
pub const slurm_err_t_ESLURM_DUPLICATE_GRES: slurm_err_t = 2102;
pub const slurm_err_t_ESLURM_JOB_SETTING_DB_INX: slurm_err_t = 2103;
pub const slurm_err_t_ESLURM_RSV_ALREADY_STARTED: slurm_err_t = 2104;
pub const slurm_err_t_ESLURM_SUBMISSIONS_DISABLED: slurm_err_t = 2105;
pub const slurm_err_t_ESLURM_NOT_HET_JOB: slurm_err_t = 2106;
pub const slurm_err_t_ESLURM_NOT_HET_JOB_LEADER: slurm_err_t = 2107;
pub const slurm_err_t_ESLURM_NOT_WHOLE_HET_JOB: slurm_err_t = 2108;
pub const slurm_err_t_ESLURM_CORE_RESERVATION_UPDATE: slurm_err_t = 2109;
pub const slurm_err_t_ESLURM_DUPLICATE_STEP_ID: slurm_err_t = 2110;
pub const slurm_err_t_ESLURM_INVALID_CORE_CNT: slurm_err_t = 2111;
pub const slurm_err_t_ESLURM_X11_NOT_AVAIL: slurm_err_t = 2112;
pub const slurm_err_t_ESLURM_GROUP_ID_MISSING: slurm_err_t = 2113;
pub const slurm_err_t_ESLURM_BATCH_CONSTRAINT: slurm_err_t = 2114;
pub const slurm_err_t_ESLURM_INVALID_TRES: slurm_err_t = 2115;
pub const slurm_err_t_ESLURM_INVALID_TRES_BILLING_WEIGHTS: slurm_err_t = 2116;
pub const slurm_err_t_ESLURM_INVALID_JOB_DEFAULTS: slurm_err_t = 2117;
pub const slurm_err_t_ESLURM_RESERVATION_MAINT: slurm_err_t = 2118;
pub const slurm_err_t_ESLURM_INVALID_GRES_TYPE: slurm_err_t = 2119;
pub const slurm_err_t_ESLURM_REBOOT_IN_PROGRESS: slurm_err_t = 2120;
pub const slurm_err_t_ESLURM_MULTI_KNL_CONSTRAINT: slurm_err_t = 2121;
pub const slurm_err_t_ESLURM_UNSUPPORTED_GRES: slurm_err_t = 2122;
pub const slurm_err_t_ESLURM_INVALID_NICE: slurm_err_t = 2123;
pub const slurm_err_t_ESLURM_INVALID_TIME_MIN_LIMIT: slurm_err_t = 2124;
pub const slurm_err_t_ESLURM_DEFER: slurm_err_t = 2125;
pub const slurm_err_t_ESLURM_CONFIGLESS_DISABLED: slurm_err_t = 2126;
pub const slurm_err_t_ESLURM_ENVIRONMENT_MISSING: slurm_err_t = 2127;
pub const slurm_err_t_ESLURM_RESERVATION_NO_SKIP: slurm_err_t = 2128;
pub const slurm_err_t_ESLURM_RESERVATION_USER_GROUP: slurm_err_t = 2129;
pub const slurm_err_t_ESLURM_PARTITION_ASSOC: slurm_err_t = 2130;
pub const slurm_err_t_ESLURM_IN_STANDBY_USE_BACKUP: slurm_err_t = 2131;
pub const slurm_err_t_ESPANK_ERROR: slurm_err_t = 3000;
pub const slurm_err_t_ESPANK_BAD_ARG: slurm_err_t = 3001;
pub const slurm_err_t_ESPANK_NOT_TASK: slurm_err_t = 3002;
pub const slurm_err_t_ESPANK_ENV_EXISTS: slurm_err_t = 3003;
pub const slurm_err_t_ESPANK_ENV_NOEXIST: slurm_err_t = 3004;
pub const slurm_err_t_ESPANK_NOSPACE: slurm_err_t = 3005;
pub const slurm_err_t_ESPANK_NOT_REMOTE: slurm_err_t = 3006;
pub const slurm_err_t_ESPANK_NOEXIST: slurm_err_t = 3007;
pub const slurm_err_t_ESPANK_NOT_EXECD: slurm_err_t = 3008;
pub const slurm_err_t_ESPANK_NOT_AVAIL: slurm_err_t = 3009;
pub const slurm_err_t_ESPANK_NOT_LOCAL: slurm_err_t = 3010;
pub const slurm_err_t_ESLURMD_PIPE_ERROR_ON_TASK_SPAWN: slurm_err_t = 4000;
pub const slurm_err_t_ESLURMD_KILL_TASK_FAILED: slurm_err_t = 4001;
pub const slurm_err_t_ESLURMD_KILL_JOB_ALREADY_COMPLETE: slurm_err_t = 4002;
pub const slurm_err_t_ESLURMD_INVALID_ACCT_FREQ: slurm_err_t = 4003;
pub const slurm_err_t_ESLURMD_INVALID_JOB_CREDENTIAL: slurm_err_t = 4004;
pub const slurm_err_t_ESLURMD_UID_NOT_FOUND: slurm_err_t = 4005;
pub const slurm_err_t_ESLURMD_GID_NOT_FOUND: slurm_err_t = 4006;
pub const slurm_err_t_ESLURMD_CREDENTIAL_EXPIRED: slurm_err_t = 4007;
pub const slurm_err_t_ESLURMD_CREDENTIAL_REVOKED: slurm_err_t = 4008;
pub const slurm_err_t_ESLURMD_CREDENTIAL_REPLAYED: slurm_err_t = 4009;
pub const slurm_err_t_ESLURMD_CREATE_BATCH_DIR_ERROR: slurm_err_t = 4010;
pub const slurm_err_t_ESLURMD_MODIFY_BATCH_DIR_ERROR: slurm_err_t = 4011;
pub const slurm_err_t_ESLURMD_CREATE_BATCH_SCRIPT_ERROR: slurm_err_t = 4012;
pub const slurm_err_t_ESLURMD_MODIFY_BATCH_SCRIPT_ERROR: slurm_err_t = 4013;
pub const slurm_err_t_ESLURMD_SETUP_ENVIRONMENT_ERROR: slurm_err_t = 4014;
pub const slurm_err_t_ESLURMD_SHARED_MEMORY_ERROR: slurm_err_t = 4015;
pub const slurm_err_t_ESLURMD_SET_UID_OR_GID_ERROR: slurm_err_t = 4016;
pub const slurm_err_t_ESLURMD_SET_SID_ERROR: slurm_err_t = 4017;
pub const slurm_err_t_ESLURMD_CANNOT_SPAWN_IO_THREAD: slurm_err_t = 4018;
pub const slurm_err_t_ESLURMD_FORK_FAILED: slurm_err_t = 4019;
pub const slurm_err_t_ESLURMD_EXECVE_FAILED: slurm_err_t = 4020;
pub const slurm_err_t_ESLURMD_IO_ERROR: slurm_err_t = 4021;
pub const slurm_err_t_ESLURMD_PROLOG_FAILED: slurm_err_t = 4022;
pub const slurm_err_t_ESLURMD_EPILOG_FAILED: slurm_err_t = 4023;
pub const slurm_err_t_ESLURMD_SESSION_KILLED: slurm_err_t = 4024;
pub const slurm_err_t_ESLURMD_TOOMANYSTEPS: slurm_err_t = 4025;
pub const slurm_err_t_ESLURMD_STEP_EXISTS: slurm_err_t = 4026;
pub const slurm_err_t_ESLURMD_JOB_NOTRUNNING: slurm_err_t = 4027;
pub const slurm_err_t_ESLURMD_STEP_SUSPENDED: slurm_err_t = 4028;
pub const slurm_err_t_ESLURMD_STEP_NOTSUSPENDED: slurm_err_t = 4029;
pub const slurm_err_t_ESLURMD_INVALID_SOCKET_NAME_LEN: slurm_err_t = 4030;
pub const slurm_err_t_ESLURMD_CONTAINER_RUNTIME_INVALID: slurm_err_t = 4031;
pub const slurm_err_t_ESCRIPT_CHDIR_FAILED: slurm_err_t = 4100;
pub const slurm_err_t_ESCRIPT_OPEN_OUTPUT_FAILED: slurm_err_t = 4101;
pub const slurm_err_t_ESCRIPT_NON_ZERO_RETURN: slurm_err_t = 4102;
pub const slurm_err_t_SLURM_PROTOCOL_SOCKET_IMPL_ZERO_RECV_LENGTH: slurm_err_t = 5000;
pub const slurm_err_t_SLURM_PROTOCOL_SOCKET_IMPL_NEGATIVE_RECV_LENGTH: slurm_err_t = 5001;
pub const slurm_err_t_SLURM_PROTOCOL_SOCKET_IMPL_NOT_ALL_DATA_SENT: slurm_err_t = 5002;
pub const slurm_err_t_ESLURM_PROTOCOL_INCOMPLETE_PACKET: slurm_err_t = 5003;
pub const slurm_err_t_SLURM_PROTOCOL_SOCKET_IMPL_TIMEOUT: slurm_err_t = 5004;
pub const slurm_err_t_SLURM_PROTOCOL_SOCKET_ZERO_BYTES_SENT: slurm_err_t = 5005;
pub const slurm_err_t_ESLURM_AUTH_CRED_INVALID: slurm_err_t = 6000;
pub const slurm_err_t_ESLURM_AUTH_FOPEN_ERROR: slurm_err_t = 6001;
pub const slurm_err_t_ESLURM_AUTH_NET_ERROR: slurm_err_t = 6002;
pub const slurm_err_t_ESLURM_AUTH_UNABLE_TO_SIGN: slurm_err_t = 6003;
pub const slurm_err_t_ESLURM_AUTH_BADARG: slurm_err_t = 6004;
pub const slurm_err_t_ESLURM_AUTH_MEMORY: slurm_err_t = 6005;
pub const slurm_err_t_ESLURM_AUTH_INVALID: slurm_err_t = 6006;
pub const slurm_err_t_ESLURM_AUTH_UNPACK: slurm_err_t = 6007;
pub const slurm_err_t_ESLURM_AUTH_SKIP: slurm_err_t = 6008;
pub const slurm_err_t_ESLURM_DB_CONNECTION: slurm_err_t = 7000;
pub const slurm_err_t_ESLURM_JOBS_RUNNING_ON_ASSOC: slurm_err_t = 7001;
pub const slurm_err_t_ESLURM_CLUSTER_DELETED: slurm_err_t = 7002;
pub const slurm_err_t_ESLURM_ONE_CHANGE: slurm_err_t = 7003;
pub const slurm_err_t_ESLURM_BAD_NAME: slurm_err_t = 7004;
pub const slurm_err_t_ESLURM_OVER_ALLOCATE: slurm_err_t = 7005;
pub const slurm_err_t_ESLURM_RESULT_TOO_LARGE: slurm_err_t = 7006;
pub const slurm_err_t_ESLURM_DB_QUERY_TOO_WIDE: slurm_err_t = 7007;
pub const slurm_err_t_ESLURM_DB_CONNECTION_INVALID: slurm_err_t = 7008;
pub const slurm_err_t_ESLURM_FED_CLUSTER_MAX_CNT: slurm_err_t = 7100;
pub const slurm_err_t_ESLURM_FED_CLUSTER_MULTIPLE_ASSIGNMENT: slurm_err_t = 7101;
pub const slurm_err_t_ESLURM_INVALID_CLUSTER_FEATURE: slurm_err_t = 7102;
pub const slurm_err_t_ESLURM_JOB_NOT_FEDERATED: slurm_err_t = 7103;
pub const slurm_err_t_ESLURM_INVALID_CLUSTER_NAME: slurm_err_t = 7104;
pub const slurm_err_t_ESLURM_FED_JOB_LOCK: slurm_err_t = 7105;
pub const slurm_err_t_ESLURM_FED_NO_VALID_CLUSTERS: slurm_err_t = 7106;
pub const slurm_err_t_ESLURM_MISSING_TIME_LIMIT: slurm_err_t = 8000;
pub const slurm_err_t_ESLURM_INVALID_KNL: slurm_err_t = 8001;
pub const slurm_err_t_ESLURM_PLUGIN_INVALID: slurm_err_t = 8002;
pub const slurm_err_t_ESLURM_PLUGIN_INCOMPLETE: slurm_err_t = 8003;
pub const slurm_err_t_ESLURM_REST_INVALID_QUERY: slurm_err_t = 9000;
pub const slurm_err_t_ESLURM_REST_FAIL_PARSING: slurm_err_t = 9001;
pub const slurm_err_t_ESLURM_REST_INVALID_JOBS_DESC: slurm_err_t = 9002;
pub const slurm_err_t_ESLURM_REST_EMPTY_RESULT: slurm_err_t = 9003;
pub const slurm_err_t_ESLURM_DATA_PATH_NOT_FOUND: slurm_err_t = 9200;
pub const slurm_err_t_ESLURM_DATA_PTR_NULL: slurm_err_t = 9201;
pub const slurm_err_t_ESLURM_DATA_CONV_FAILED: slurm_err_t = 9202;
pub const slurm_err_t_ESLURM_DATA_REGEX_COMPILE: slurm_err_t = 9203;
pub const slurm_err_t_ESLURM_DATA_UNKNOWN_MIME_TYPE: slurm_err_t = 9204;
pub const slurm_err_t_ESLURM_DATA_TOO_LARGE: slurm_err_t = 9205;
pub type slurm_err_t = ::std::os::raw::c_uint;
extern "C" {
    pub fn slurm_strerror(errnum: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn slurm_seterrno(errnum: ::std::os::raw::c_int);
}
extern "C" {
    pub fn slurm_get_errno() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_perror(msg: *const ::std::os::raw::c_char);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct spank_handle {
    _unused: [u8; 0],
}
pub type spank_t = *mut spank_handle;
pub type spank_f = ::std::option::Option<
    unsafe extern "C" fn(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub fn slurm_spank_init(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_job_prolog(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_init_post_opt(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_local_user_init(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_user_init(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_task_init_privileged(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_task_init(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_task_post_fork(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_task_exit(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_job_epilog(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_slurmd_exit(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn slurm_spank_exit(
        spank: spank_t,
        ac: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
pub const spank_item_S_JOB_UID: spank_item = 0;
pub const spank_item_S_JOB_GID: spank_item = 1;
pub const spank_item_S_JOB_ID: spank_item = 2;
pub const spank_item_S_JOB_STEPID: spank_item = 3;
pub const spank_item_S_JOB_NNODES: spank_item = 4;
pub const spank_item_S_JOB_NODEID: spank_item = 5;
pub const spank_item_S_JOB_LOCAL_TASK_COUNT: spank_item = 6;
pub const spank_item_S_JOB_TOTAL_TASK_COUNT: spank_item = 7;
pub const spank_item_S_JOB_NCPUS: spank_item = 8;
pub const spank_item_S_JOB_ARGV: spank_item = 9;
pub const spank_item_S_JOB_ENV: spank_item = 10;
pub const spank_item_S_TASK_ID: spank_item = 11;
pub const spank_item_S_TASK_GLOBAL_ID: spank_item = 12;
pub const spank_item_S_TASK_EXIT_STATUS: spank_item = 13;
pub const spank_item_S_TASK_PID: spank_item = 14;
pub const spank_item_S_JOB_PID_TO_GLOBAL_ID: spank_item = 15;
pub const spank_item_S_JOB_PID_TO_LOCAL_ID: spank_item = 16;
pub const spank_item_S_JOB_LOCAL_TO_GLOBAL_ID: spank_item = 17;
pub const spank_item_S_JOB_GLOBAL_TO_LOCAL_ID: spank_item = 18;
pub const spank_item_S_JOB_SUPPLEMENTARY_GIDS: spank_item = 19;
pub const spank_item_S_SLURM_VERSION: spank_item = 20;
pub const spank_item_S_SLURM_VERSION_MAJOR: spank_item = 21;
pub const spank_item_S_SLURM_VERSION_MINOR: spank_item = 22;
pub const spank_item_S_SLURM_VERSION_MICRO: spank_item = 23;
pub const spank_item_S_STEP_CPUS_PER_TASK: spank_item = 24;
pub const spank_item_S_JOB_ALLOC_CORES: spank_item = 25;
pub const spank_item_S_JOB_ALLOC_MEM: spank_item = 26;
pub const spank_item_S_STEP_ALLOC_CORES: spank_item = 27;
pub const spank_item_S_STEP_ALLOC_MEM: spank_item = 28;
pub const spank_item_S_SLURM_RESTART_COUNT: spank_item = 29;
pub const spank_item_S_JOB_ARRAY_ID: spank_item = 30;
pub const spank_item_S_JOB_ARRAY_TASK_ID: spank_item = 31;
pub type spank_item = ::std::os::raw::c_uint;
pub use self::slurm_err_t as spank_err_t;
pub use self::spank_item as spank_item_t;
pub const spank_context_S_CTX_ERROR: spank_context = 0;
pub const spank_context_S_CTX_LOCAL: spank_context = 1;
pub const spank_context_S_CTX_REMOTE: spank_context = 2;
pub const spank_context_S_CTX_ALLOCATOR: spank_context = 3;
pub const spank_context_S_CTX_SLURMD: spank_context = 4;
pub const spank_context_S_CTX_JOB_SCRIPT: spank_context = 5;
pub type spank_context = ::std::os::raw::c_uint;
pub use self::spank_context as spank_context_t;
pub type spank_opt_cb_f = ::std::option::Option<
    unsafe extern "C" fn(
        val: ::std::os::raw::c_int,
        optarg: *const ::std::os::raw::c_char,
        remote: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub static mut spank_options: [spank_option; 0usize];
}
extern "C" {
    pub fn spank_strerror(err: spank_err_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn spank_symbol_supported(symbol: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn spank_remote(spank: spank_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn spank_context() -> spank_context_t;
}
extern "C" {
    pub fn spank_option_register(spank: spank_t, opt: *mut spank_option) -> spank_err_t;
}
extern "C" {
    pub fn spank_option_getopt(
        spank: spank_t,
        opt: *mut spank_option,
        optarg: *mut *mut ::std::os::raw::c_char,
    ) -> spank_err_t;
}
extern "C" {
    pub fn spank_get_item(spank: spank_t, item: spank_item_t, ...) -> spank_err_t;
}
extern "C" {
    pub fn spank_getenv(
        spank: spank_t,
        var: *const ::std::os::raw::c_char,
        buf: *mut ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    ) -> spank_err_t;
}
extern "C" {
    pub fn spank_setenv(
        spank: spank_t,
        var: *const ::std::os::raw::c_char,
        val: *const ::std::os::raw::c_char,
        overwrite: ::std::os::raw::c_int,
    ) -> spank_err_t;
}
extern "C" {
    pub fn spank_unsetenv(spank: spank_t, var: *const ::std::os::raw::c_char) -> spank_err_t;
}
extern "C" {
    pub fn spank_job_control_setenv(
        sp: spank_t,
        name: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
        overwrite: ::std::os::raw::c_int,
    ) -> spank_err_t;
}
extern "C" {
    pub fn spank_job_control_getenv(
        sp: spank_t,
        name: *const ::std::os::raw::c_char,
        buf: *mut ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    ) -> spank_err_t;
}
extern "C" {
    pub fn spank_job_control_unsetenv(
        sp: spank_t,
        name: *const ::std::os::raw::c_char,
    ) -> spank_err_t;
}
extern "C" {
    pub fn slurm_info(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_error(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_verbose(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_debug(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_debug2(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_debug3(format: *const ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn slurm_spank_log(arg1: *const ::std::os::raw::c_char, ...);
}
